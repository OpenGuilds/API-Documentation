# Wallet

## The Wallet Object

> The Wallet object looks like this:

```json
<%= JSON.pretty_generate(wallet) %>
```

Each [guild](#the-guild-object) you join has its own individual wallet.

Wallets store a history of [transactions](#the-transaction-object), 
which can be different types.

Wallets are backed by a [bank](#the-bank-object) which the owner is responsible
for for fulfilling.

Wallet credits can be exchanged by workers by requesting a payout.

A Wallet has the following attributes:

Attribute | Type | Description
--------- | ---- | -----------
object | string | A string representing the object type.
id | string | The ID of the Wallet being returned.
transactions | array[transactions] | A time ordered history of Transactions, with the newest first.
balance | string | The total amount of Credits from adding all Credits minus Debits.
balance_cents | integer | The balance represented in cents.


## The Bank Object

A bank is has a wallet that is owned by the guild called the vault.

The bank records all transactions made in and out of associated wallets.

Users can place requests for a payout of their credits, which are accepted
by the guild owner.

## The Transaction Object

> The transaction object looks like this:

```json
<%= JSON.pretty_generate(transaction) %>
```

> A variation, called a time transaction object looks like this:

```json
<%= JSON.pretty_generate(time_transaction) %>
```


Transactions are created when paying for something, or exchanging credits.

Time transactions are extensions of transactions which record the time worked
which is then converted to the real amount. It can be useful for following
fiscal rules such as paying workers hourly.

A Transaction has the following attributes:

Attribute | Type | Description
--------- | ---- | -----------
object | string | A string representing the object type.
id | string | The ID of the Wallet being returned.
type | string | The type of the transaction, can be one of the valid transaction types.
amount | string | The amount either credited or debited during the transaction.
amount_cents | integer | The amount credited or debited during the transaction in cents.

A transaction can have the following types:

Type | Description
---- | -----------
Guild Credit | A positive transfer of guild currency.
Guild Debit | A negative transfer of guild currency.
Guild Time Credit | A positive transfer of guild time.
Guild Time Debit | A negative transfer of guild time.
Amazon Credit | A positive transfer of Amazon credits.
Amazon Debit | A negative transfer of Amazon credits.
Fiat Credit | A positive transfer of fiat money.
Fiat Debit | A negative transfer of fiat money.


## List all Wallets

Will return all wallets belonging to the user.

```ruby
require 'open-guilds'
OpenGuilds.api_key = '8641fb38-294a-41d9-9591-3449dfd99910'

OpenGuilds::Wallet.list()
```

```shell
curl <%= api_endpoint + "/api/wallets" %>
  -u "8641fb38-294a-41d9-9591-3449dfd99910"
```

> The above command returns JSON structured like this:

```json
<%= JSON.pretty_generate(list_for([wallet], 'api/wallets/2/transactions' )) %>
```

### HTTP Request

`GET <%= api_endpoint + "/api/wallets" %>`


## Get a Wallet

Will return a wallet object belonging to the authenticated user.

```ruby
require 'open-guilds'
OpenGuilds.api_key = '8641fb38-294a-41d9-9591-3449dfd99910'

OpenGuilds::Wallet.get(1)
```

```shell
curl <%= api_endpoint + "/api/wallet/<ID>" %>
  -u "8641fb38-294a-41d9-9591-3449dfd99910"
```

> Which should return your Wallet:

```json
<%= JSON.pretty_generate(wallet) %>
```

### HTTP Request

`GET <%= api_endpoint + "/api/wallet/<ID>" %>`

### URL Parameters

Parameter | Description
--------- | -----------
ID | The ID of the Wallet to retrieve
